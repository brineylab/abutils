#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# abutils documentation build configuration file, created by
# sphinx-quickstart on Fri Jul 27 10:54:47 2018.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

import os
import sys
from datetime import datetime
from pathlib import Path
from unittest.mock import MagicMock

import sphinx_rtd_theme
from sphinx.application import Sphinx

HERE = Path(__file__).parent

if os.environ.get("READTHEDOCS", None) == "True":
    # class Mock(MagicMock):
    #     @classmethod
    #     def __getattr__(cls, name):
    #             return Mock()

    MOCK_MODULES = [
        "abstar",
        # "abutils",
        "pygtk",
        "gtk",
        "gobject",
        "argparse",
        "numpy",
        "nwalign",
        "pandas",
        "scanpy",
        "anndata",
        "baltic",
        "dnachisel",
        "ete3",
        "fastcluster",
        "harmonypy",
        "leidenalg",
        "matplotlib",
        "matplotlib.colors",
        "matplotlib.colors.Colormap",
        "matplotlib.colors.ListedColormap",
        "matplotlib.colors.LinearSegmentedColormap",
        "matplotlib.colors.to_rgba_array",
        "matplotlib.pyplot",
        "matplotlib.lines",
        "matplotlib.patches",
        "matplotlib.path",
        "mpl_toolkits",
        "mpl_toolkits.axes_grid1",
        "mpl_toolkits.axes_grid1.inset_locator",
        "sklearn",
        "sklearn.neighbors",
        "mnemonic",
        "natsort",
        "prettytable",
        "python-Levenshtein",
        "Levenshtein",
        "paramiko",
        "parasail",
        "pymongo",
        "pyyaml",
        "sample-sheet",
        "scikit-learn",
        "scanorama",
        "scipy",
        "scipy.ndimage",
        "scipy.signal",
        "scipy.cluster",
        "scipy.cluster.hierarchy",
        "smart_open",
        "statsmodels",
        "statsmodels.api",
        "scrublet",
        "scvelo",
        "seaborn",
        "umap-learn",
        "Bio",
        "Bio.Seq",
        "Bio.SeqIO",
        "Bio.SeqRecord",
        "Bio.Align",
        "Bio.AlignIO",
        "abstar.core",
        "abstar.core.abstar",
        "abstar.core.germline",
        "abstar.preprocess",
        "abstar.utils",
        "abstar.utils.abstar",
        "abstar.utils.regions",
        # "abutils.utils",
        # "abutils.utils.alignment",
        # "abutils.utils.color",
        # "abutils.utils.cluster",
        # "abutils.utils.utilities",
        # "abutils.utils.alignment",
        # "abutils.utils.codons",
        # "abutils.utils.pipeline",
        # "abutils.utils.decorators",
        # "abutils.color",
        # "abutils.core",
        # "abutils.core.sequence",
        # "abutils.core.pair",
        # "abutils.tools",
        # "abutils.tools.alignment",
        # "abutils.tools.cluster",
        # "abutils.tools.similarity",
    ]
    sys.modules.update((mod_name, MagicMock()) for mod_name in MOCK_MODULES)

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
sys.path.insert(0, os.path.abspath("../../"))
# sys.path[:0] = [str(HERE.parent), str(HERE / "extensions")]

autosummary_generate = True
autodoc_member_order = "bysource"
# autodoc_default_flags = ['members']
napoleon_google_docstring = False
napoleon_numpy_docstring = True
napoleon_include_init_with_doc = False
napoleon_use_rtype = True  # having a separate entry generally helps readability
napoleon_use_param = True
napoleon_custom_sections = [("Params", "Parameters")]
todo_include_todos = False
api_dir = HERE / "api"  # function_images


# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
# extensions = ["sphinx.ext.autodoc", "sphinx.ext.napoleon"]
extensions = [
    "sphinx.ext.autodoc",
    "sphinx.ext.autosummary",
    "sphinx.ext.napoleon",
    "sphinx.ext.intersphinx",
    "sphinx_copybutton",
    "sphinx_togglebutton",
    "sphinx_design",
    "autodocsumm",
    # "sphinx_autodoc_typehints",  # needs to be after napoleon
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = ".rst"

# The master toctree document.
master_doc = "index"

# General information about the project.
project = "abutils"
copyright = f"{datetime.now():%Y}, the Briney lab."
author = "Bryan Briney"

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
from abutils.version import __version__

version = __version__
# version = '0.0.4'
# The full version, including alpha/beta/rc tags.
release = version

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = "en"

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = []

# The name of the Pygments (syntax highlighting) style to use.
# pygments_style = "sphinx"
pygments_style = "monokai"

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = False


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
# html_theme = 'alabaster'
# html_theme = 'sphinx_rtd_theme'
# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
# html_theme = 'alabaster'
# html_theme = 'sphinx_rtd_theme'
html_theme = "furo"
# html_theme = 'pydata_sphinx_theme'
# html_theme = 'sphinx_material'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# The name for this set of Sphinx documents.  If None, it defaults to
# "<project> v<release> documentation".
# html_title = None
html_title = f"{project} v{release}"

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
# html_static_path = ['_static']
# html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# This is required for the alabaster theme
# refs: http://alabaster.readthedocs.io/en/latest/installation.html#sidebars
html_sidebars = {
    "**": [
        "relations.html",  # needs 'show_related': True theme option to display
        "searchbox.html",
    ]
}


# -- Options for HTMLHelp output ------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = "abutilsdoc"


# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',
    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',
    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',
    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, "abutils.tex", "abutils Documentation", "Bryan Briney", "manual"),
]


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [(master_doc, "abutils", "abutils Documentation", [author], 1)]


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (
        master_doc,
        "abutils",
        "abutils Documentation",
        author,
        "abutils",
        "One line description of project.",
        "Miscellaneous",
    ),
]

autoclass_content = "both"
autodoc_member_order = "bysource"
autodoc_default_flags = ["members"]
